{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","onTabSelected","findTabById","id","find","tab","className","map","cn","href","onClick","handleSelectedTab","title","content","App","useState","selectedTab","setSelectedTab","currentTab","ReactDOM","render","document","getElementById"],"mappings":"kNAUaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KACAC,EAEI,EAFJA,cACAC,EACI,EADJA,cAEMC,EAAc,SAACC,GACnB,OAAOJ,EAAKK,MAAK,SAACC,GAAD,OAASA,EAAIF,KAAOA,MAAOJ,EAAK,IASnD,OACE,sBAAK,UAAQ,gBAAb,UAEE,qBAAKO,UAAU,gBAAf,SACE,6BACGP,EAAKQ,KAAI,SAACF,GAAD,OACR,oBACEC,UAAWE,IAAG,CACZ,YAAaN,EAAYF,GAAeG,KAAOE,EAAIF,KAErD,UAAQ,MAJV,SAOE,mBACEM,KAAI,WAAMJ,EAAIF,IACd,UAAQ,UACRO,QAAS,kBAtBG,SAACL,GACrBA,EAAIF,KAAOH,GACbC,EAAcI,GAoBWM,CAAkBN,IAHnC,SAKGA,EAAIO,SAPFP,EAAIF,WAcjB,qBAAKG,UAAU,QAAQ,UAAQ,aAA/B,SACGJ,EAAYF,GAAea,cC5CvBd,EAAO,CAClB,CACEI,GAAI,QACJS,MAAO,QACPC,QAAS,eAEX,CACEV,GAAI,QACJS,MAAO,QACPC,QAAS,eAEX,CACEV,GAAI,QACJS,MAAO,QACPC,QAAS,gBAIAC,EAAgB,WAC3B,MAAsCC,mBAAShB,EAAK,IAApD,mBAAOiB,EAAP,KAAoBC,EAApB,KAMA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBU,EAAYJ,SAGlC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAegB,EAAYb,GAC3BF,cAbgB,SAACiB,GACrBD,EAAeC,UC1BnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.290ff69d.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[];\n  selectedTabId: string;\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const findTabById = (id: string) => {\n    return tabs.find((tab) => tab.id === id) || tabs[0];\n  };\n\n  const handleSelectedTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => (\n            <li\n              className={cn({\n                'is-active': findTabById(selectedTabId).id === tab.id,\n              })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleSelectedTab(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {findTabById(selectedTabId).content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  {\n    id: 'tab-1',\n    title: 'Tab 1',\n    content: 'Some text 1',\n  },\n  {\n    id: 'tab-2',\n    title: 'Tab 2',\n    content: 'Some text 2',\n  },\n  {\n    id: 'tab-3',\n    title: 'Tab 3',\n    content: 'Some text 3',\n  },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (currentTab: Tab) => {\n    setSelectedTab(currentTab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={onTabSelected}\n      />\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}